name: CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: prisma_react
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    env:
      DATABASE_URL: mysql://root:1234@127.0.0.1:3306/prisma_react

    steps:
      # Stage 1: Checkout & Setup
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      # Stage 2: Install Dependencies
      - name: Install backend dependencies
        run: npm ci
        working-directory: ./backend

      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./frontend

      # Stage 3: Lint & Security
      - name: Lint backend
        run: npm run lint || echo "Lint warnings found"
        working-directory: ./backend

      - name: Security audit
        run: npm audit --audit-level=moderate || echo "Security issues found"
        working-directory: ./backend

      # Stage 4: Test with DB
      - name: Wait for MySQL to be ready
        run: |
          timeout 60s bash -c 'until mysqladmin ping -h 127.0.0.1 -u root --password=1234 --silent; do sleep 2; done' || echo "MySQL not ready"

      - name: Run Prisma migration and backend tests
        run: |
          npx prisma migrate deploy
          npm test
        working-directory: ./backend

      # === Docker Build & Push (main branch only) ===
      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend Docker image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: saadcui/backend:latest,saadcui/backend:${{ github.sha }}

      - name: Build and push frontend Docker image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: saadcui/frontend:latest,saadcui/frontend:${{ github.sha }}

      - name: Deployment confirmation logs
        if: github.ref == 'refs/heads/main'
        run: |
          echo "âœ… Docker images successfully pushed to Docker Hub!"
          echo "Backend:  https://hub.docker.com/r/saadcui/backend"
          echo "Frontend: https://hub.docker.com/r/saadcui/frontend"
          echo "Tags: latest, ${{ github.sha }}"
